# 스프링 프로필 : prod (AWS EC2 서버로 톰캣 실행, 운영 Postgresql DB)
spring:
  server:
    use-forward-headers: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
    session:
      cookie:
        domain: .studypod.click
        same-site: None
        secure: true
  datasource:
    jackson:
      default-property-inclusion: non_null;
    h2:
      console:
        enabled: false
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    #show-sql: true # 전송 쿼리 확인, 애플리케이션 실행과정에 쿼리의 실행 구문을 모두 보여줌
    hibernate:
      ddl-auto: validate  # 운영 환경에서는 'validate'
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect  # PostgreSQL 방언 사용
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME}
    password: ${SPRING_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls.enable: true

  cloud:
    aws:
      s3:
        enabled: true
        bucket: ${S3_BUCKET_NAME}
      stack.auto: false
      region.static: ap-northeast-2
      credentials:
        access-key: ${AWS_ACCESS_KEY_ID}
        secret-key: ${AWS_SECRET_ACCESS_KEY}

jwt:
  cookie:
    secure: true
    http-only: true
    same-site: Strict
  # 운영 서버 내 /etc/environment 에 환경 변수 설정
  # jjwt 라이브러리 0.11.0 버전부터 secret_key에 Base64로 인코딩된 문자열을 요구하는 방식으로 변경
  # JJWT 라이브러리는 HMAC-SHA 알고리즘 사용 시 256비트(32바이트) 미만의 키를 강제로 거부
  # 256비트 미만 키는 보안상 취약해서 라이브러리가 애초에 안전하지 않은 키 사용을 막으려는 목적
  issuer: studypod@studypod.com
  access-secret: ${JWT_ACCESS_SECRET}
  refresh-secret: ${JWT_REFRESH_SECRET}